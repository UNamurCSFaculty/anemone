************ 
Premiere page 
************* 

The Anemone workbench 
=====================

This first page describes the general lines of the Anemone workbench. 
  
* Anemone is articulated around a so-called **interactive blackboard**.
* It starts by displaying the current  contents  of  the  shared  space  and  allows  to  interact  directly  through  the **tell**, **get**, **filter**, **unfilter** and **clear** buttons.
* It offers to create five types of processes in order to allow the user to execute interactively or autonomously statements in Multi-Bach, to declare various constructions, to visualize the execution of rules and to model-check programs.

.. comment::For more information about Anemone, the reader is invited to visit the `official website <http://sphinx-doc.org/>`_.

The objective of this workbench is threefold:

* to  allow  the  user  to  understand  the  meaning  of  instructions  written  in *Linda-like* languages, by showing how they can be executed step by step and  how  the  contents  of  the  shared  space,  central  to  coordination  languages, can be modified so as to release suspended processes;

* to  allow  the  user  to  better  grasp  the  modeling  of  real-life  systems,  by connecting agents to animations representing the evolution of the modeled system;

* to allow the user to check properties by model checking reachability formulae and by producing traces that can be replayed as evidences of the establishment of the formulae.


To make it more practical, the authors use the workbench Anemone on a running example, the *rush hour* puzzle.   

.. figure:: img/Rush.jpg 
    :width: 200px
    :align: center
    :alt: alternate text
    :figclass: align-center

    Rush Hour Problem : the game as illustrated at `Michael Fogleman <https://www.michaelfogleman.com/rush>`_

This  game,  illustrated   in the following figure, consists in moving cars and trucks on a 6×6 grid, according to their direction, such that the red car can exit.  It can be formulated as a coordination problem by considering cars and trucks as autonomous agents which have to coordinate on the basis of free places

.. figure:: img/animation.jpg 
    :width: 150px
    :align: center
    :alt: alternate text
    :figclass: align-center

    The  game  modeled as a grid of 6×6, with cars and trucks depicted as rectangles of different colors

**The implementation**


The \ **Anemone**\  workbench has been impletement on top of \ **Scala**\  [#]_, which combines the object-oriented and functional paradigms and which benefits from strong static type systems, together with the \ **Processing library**\  [#]_ which allows for creating animations by redrawing canvas several times per second (typically 60 times per second).


  
.. comment::**The  resulting  workbench** 



.. admonition:: Information

    * **Release**: |release|

    * **Date**: July 2020

    * **Authors**: Manel Barkallah and Jean-Marie Jacquet, University of Namur, Belgium

    * **Target**: users and developers

    * For more information on the Anemone workbench, please visit : `Anemone <https://github.com/UNamurCSFaculty/anemone/>`_.

   


.. rubric:: Footnotes

.. [#] M. Odersky, L. Spoon, B. Venners,  Programming in Scala, A comprehensive step-by-step guide, Artemis, 2016.
.. [#] C. Reas, B. Fry, Processing:  A Programming Handbook for Visual Design-ers, The MIT Press, 2014.
